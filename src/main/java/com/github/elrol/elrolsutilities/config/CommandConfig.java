package com.github.elrol.elrolsutilities.config;

import com.github.elrol.elrolsutilities.libs.Aliases;
import net.minecraftforge.common.ForgeConfigSpec;

import java.util.List;

public class CommandConfig {

    public static CommandInfo back = new CommandInfo();
    public static CommandInfo bal = new CommandInfo();
    public static CommandInfo bomb = new CommandInfo();
    public static CommandInfo bypass = new CommandInfo();
    public static CommandInfo chestshop = new CommandInfo();
    public static CommandInfo claim = new CommandInfo();
    public static CommandInfo claimflag = new CommandInfo();
    public static CommandInfo clearlag = new CommandInfo();
    public static CommandInfo delhome = new CommandInfo();
    public static CommandInfo delwarp = new CommandInfo();
    public static CommandInfo econ = new CommandInfo();
    public static CommandInfo endchest = new CommandInfo();
    public static CommandInfo feed = new CommandInfo();
    public static CommandInfo flood = new CommandInfo();
    public static CommandInfo fly = new CommandInfo();
    public static CommandInfo gamemode = new CommandInfo();
    public static CommandInfo god = new CommandInfo();
    public static CommandInfo heal = new CommandInfo();
    public static CommandInfo home = new CommandInfo();
    public static CommandInfo homes = new CommandInfo();
    public static CommandInfo invsee = new CommandInfo();
    public static CommandInfo jail = new CommandInfo();
    public static CommandInfo kit = new CommandInfo();
    public static CommandInfo link = new CommandInfo();
    public static CommandInfo msg  = new CommandInfo();
    public static CommandInfo msg_toggle = new CommandInfo();
    public static CommandInfo motd = new CommandInfo();
    public static CommandInfo mute = new CommandInfo();
    public static CommandInfo nick = new CommandInfo();
    public static CommandInfo pay = new CommandInfo();
    public static CommandInfo perms = new CommandInfo();
    public static CommandInfo price = new CommandInfo();
    public static CommandInfo respond = new CommandInfo();
    public static CommandInfo rank = new CommandInfo();
    public static CommandInfo rankup = new CommandInfo();
    public static CommandInfo reload = new CommandInfo();
    public static CommandInfo repair = new CommandInfo();
    public static CommandInfo rtp = new CommandInfo();
    public static CommandInfo rtpfar = new CommandInfo();
    public static CommandInfo rtpnear = new CommandInfo();
    public static CommandInfo rules = new CommandInfo();
    public static CommandInfo sell = new CommandInfo();
    public static CommandInfo sethome = new CommandInfo();
    public static CommandInfo setspawn = new CommandInfo();
    public static CommandInfo setwarp = new CommandInfo();
    public static CommandInfo smite = new CommandInfo();
    public static CommandInfo spawn = new CommandInfo();
    public static CommandInfo staffchat = new CommandInfo();
    public static CommandInfo sudo = new CommandInfo();
    public static CommandInfo title = new CommandInfo();
    public static CommandInfo titles = new CommandInfo();
    public static CommandInfo tpa = new CommandInfo();
    public static CommandInfo tp_accept = new CommandInfo();
    public static CommandInfo tp_deny = new CommandInfo();
    public static CommandInfo tp_here = new CommandInfo();
    public static CommandInfo trust = new CommandInfo();
    public static CommandInfo unclaim = new CommandInfo();
    public static CommandInfo unclaimAll = new CommandInfo();
    public static CommandInfo unjail = new CommandInfo();
    public static CommandInfo untrust = new CommandInfo();
    public static CommandInfo warp = new CommandInfo();
    public static CommandInfo warps = new CommandInfo();

    public static ForgeConfigSpec.BooleanValue back_enable_on_death;
    public static ForgeConfigSpec.ConfigValue<String> bal_other_perm;
    public static ForgeConfigSpec.IntValue bal_other_cost;
    public static ForgeConfigSpec.ConfigValue<String> chestshop_max_perm;
    public static ForgeConfigSpec.ConfigValue<String> chestshop_adminperm;
    public static ForgeConfigSpec.ConfigValue<String> claim_max_perm;
    public static ForgeConfigSpec.ConfigValue<String> claim_max_load;
    public static ForgeConfigSpec.ConfigValue<String> claim_bypass_perm;
    public static ForgeConfigSpec.ConfigValue<String> claim_load_offline;
    public static ForgeConfigSpec.ConfigValue<String> feed_other_perm;
    public static ForgeConfigSpec.ConfigValue<String> fly_other_perm;
    public static ForgeConfigSpec.ConfigValue<String> god_other_perm;
    public static ForgeConfigSpec.ConfigValue<String> heal_other_perm;
    public static ForgeConfigSpec.ConfigValue<String> home_max_perm;
    public static ForgeConfigSpec.ConfigValue<String> homes_other;
    public static ForgeConfigSpec.ConfigValue<String> kit_modify_perm;
    public static ForgeConfigSpec.ConfigValue<String> motd_modify_perm;
    public static ForgeConfigSpec.ConfigValue<String> nick_other_perm;
    public static ForgeConfigSpec.ConfigValue<String> rank_change_perm;
    public static ForgeConfigSpec.ConfigValue<String> repair_all_perm;
    public static ForgeConfigSpec.ConfigValue<String> titles_admin;
    public static ForgeConfigSpec.IntValue rtp_max;
    public static ForgeConfigSpec.IntValue rtp_origin_x;
    public static ForgeConfigSpec.IntValue rtp_origin_z;
    public static ForgeConfigSpec.IntValue rtpfar_max;
    public static ForgeConfigSpec.IntValue rtpnear_min;
    public static ForgeConfigSpec.IntValue rtpnear_max;
    public static ForgeConfigSpec.ConfigValue<String> rules_modify_perm;
    public static ForgeConfigSpec.IntValue tpa_tp_time;

    public static void init(ForgeConfigSpec.Builder server) {
        server.comment("New Config");
        server.push("Back");
            back.enable = server.define("enable", true);
            back_enable_on_death = server.define("enable-on-death", true);
            back.delay = server.defineInRange("delay", 5, 0, Integer.MAX_VALUE);
            back.cooldown = server.defineInRange("cooldown", 30, 0, Integer.MAX_VALUE);
            back.aliases = server.defineList("aliases", Aliases.back, o -> o instanceof String);
            back.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Bal");
            bal.enable = server.define("enable", true);
            bal.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            bal.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            bal_other_perm = server.define("other-perm", "serverutils.bal-other");
            bal.aliases = server.defineList("aliases", Aliases.bal, o -> o instanceof String);
            bal.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
            bal_other_cost = server.defineInRange("other-cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Bomb");
            bomb.enable = server.define("enable", true);
            bomb.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            bomb.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            bomb.aliases = server.defineList("aliases", Aliases.bomb, o -> o instanceof String);
            bomb.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Bypass");
            bypass.enable = server.define("enable", true);
            bypass.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            bypass.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            bypass.aliases = server.defineList("aliases", Aliases.bypass, o -> o instanceof String);
            bypass.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("ChestShop");
            chestshop.enable = server.define("enable", true);
            chestshop.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            chestshop.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            chestshop_max_perm = server.define("max-perm", "serverutils.maxshops_");
            chestshop_adminperm = server.define("adminperm", "serverutils.chestshop.createadmin");
            chestshop.aliases = server.defineList("aliases", Aliases.chestshop, o -> o instanceof String);
            chestshop.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Claim");
            claim.enable = server.define("enable", true);
            claim.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            claim.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            claim_max_perm = server.define("max-perm", "serverutils.maxclaims_");
            claim_max_load = server.define("load-perm", "serverutils.maxclaimsload_");
            claim_load_offline = server.define("load-offline", "serverutils.claimloadoffline");
            claim_bypass_perm = server.define("bypass-perm", "serverutils.claim-bypass");
            claim.aliases = server.defineList("aliases", Aliases.claim, o -> o instanceof String);
            claim.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Claimflag");
            claimflag.enable = server.define("enable", true);
            claimflag.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            claimflag.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            claimflag.aliases = server.defineList("aliases", Aliases.claimflag, o -> o instanceof String);
            claimflag.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Clearlag");
            clearlag.enable = server.define("enable", true);
            clearlag.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            clearlag.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            clearlag.aliases = server.defineList("aliases", Aliases.clearlag, o -> o instanceof String);
            clearlag.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Delhome");
            delhome.enable = server.define("enable", true);
            delhome.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            delhome.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            delhome.aliases = server.defineList("aliases", Aliases.delhome, o -> o instanceof String);
            delhome.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Delwarp");
            delwarp.enable = server.define("enable", true);
            delwarp.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            delwarp.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            delwarp.aliases = server.defineList("aliases", Aliases.delwarp, o -> o instanceof String);
            delwarp.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Econ");
            econ.enable = server.define("enable", true);
            econ.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            econ.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            econ.aliases = server.defineList("aliases", Aliases.econ, o -> o instanceof String);
            econ.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Endchest");
            endchest.enable = server.define("enable", true);
            endchest.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            endchest.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            endchest.aliases = server.defineList("aliases", Aliases.endchest, o -> o instanceof String);
            endchest.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Feed");
            feed.enable = server.define("enable", true);
            feed.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            feed.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            feed_other_perm = server.define("other-perm", "serverutils.feed.other");
            feed.aliases = server.defineList("aliases", Aliases.feed, o -> o instanceof String);
            feed.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Flood");
            flood.enable = server.define("enable", true);
            flood.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            flood.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            flood.aliases = server.defineList("aliases", Aliases.flood, o -> o instanceof String);
            flood.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Fly");
            fly.enable = server.define("enable", true);
            fly.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            fly.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            fly_other_perm = server.define("other-perm", "serverutils.fly.other");
            fly.aliases = server.defineList("aliases", Aliases.fly, o -> o instanceof String);
            fly.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Gamemode");
            gamemode.enable = server.define("enable", true);
            gamemode.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            gamemode.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            gamemode.aliases = server.defineList("aliases", Aliases.gamemode, o -> o instanceof String);
            gamemode.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("God");
            god.enable = server.define("enable", true);
            god.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            god.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            god_other_perm = server.define("other-perm", "serverutils.god.other");
            god.aliases = server.defineList("aliases", Aliases.god, o -> o instanceof String);
            god.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Heal");
            heal.enable = server.define("enable", true);
            heal.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            heal.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            heal_other_perm = server.define("other-perm", "serverutils.heal.other");
            heal.aliases = server.defineList("aliases", Aliases.heal, o -> o instanceof String);
            heal.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Home");
            home.enable = server.define("enable", true);
            home.delay = server.defineInRange("delay", 5, 0, Integer.MAX_VALUE);
            home.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            home_max_perm = server.define("home-max-perm", "serverutils.maxhome_");
            home.aliases = server.defineList("aliases", Aliases.home, o -> o instanceof String);
            home.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Homes");
            homes.enable = server.define("enable", true);
            homes.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            homes.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            homes.aliases = server.defineList("aliases", Aliases.homes, o -> o instanceof String);
            homes.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
            homes_other = server.define("other-perm", "command.homes.other");
        server.pop();
        server.push("Invsee");
            invsee.enable = server.define("enable", true);
            invsee.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            invsee.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            invsee.aliases = server.defineList("aliases", Aliases.invsee, o -> o instanceof String);
            invsee.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Jail");
            jail.enable = server.define("enable", true);
            jail.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            jail.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            jail.aliases = server.defineList("aliases", Aliases.jail, o -> o instanceof String);
            jail.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Kit");
            kit.enable = server.define("enable", true);
            kit.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            kit.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            kit_modify_perm = server.define("modfiy perm", "serverutils.kit.modify");
            kit.aliases = server.defineList("aliases", Aliases.kit, o -> o instanceof String);
            kit.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Link");
            link.enable = server.define("enable", true);
            link.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            link.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            link.aliases = server.defineList("aliases", Aliases.link, o -> o instanceof String);
            link.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Msg");
            msg.enable = server.define("enable", true);
            msg.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            msg.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            msg.aliases = server.defineList("aliases", Aliases.msg, o -> o instanceof String);
            msg.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Msgtoggle");
            msg_toggle.enable = server.define("enable", true);
            msg_toggle.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            msg_toggle.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            msg_toggle.aliases = server.defineList("aliases", Aliases.msg_toggle, o -> o instanceof String);
            msg_toggle.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Motd");
            motd.enable = server.define("enable", true);
            motd.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            motd.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            motd_modify_perm = server.define("modify-perm", "serverutils.motd.modify");
            motd.aliases = server.defineList("aliases", Aliases.motd, o -> o instanceof String);
            motd.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Mute");
            mute.enable = server.define("enable", true);
            mute.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            mute.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            mute.aliases = server.defineList("aliases", Aliases.mute, o -> o instanceof String);
            mute.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Nick");
            nick.enable = server.define("enable", true);
            nick.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            nick.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            nick_other_perm = server.define("other-perm", "serverutils.nick.other");
            nick.aliases = server.defineList("aliases", Aliases.nick, o -> o instanceof String);
            nick.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Pay");
            pay.enable = server.define("enable", true);
            pay.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            pay.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            pay.aliases = server.defineList("aliases", Aliases.pay, o -> o instanceof String);
            pay.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Permission");
            perms.enable = server.define("enable", true);
            perms.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            perms.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            perms.aliases = server.defineList("aliases", Aliases.perms, o -> o instanceof String);
            perms.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Price");
            price.enable = server.define("enable", true);
            price.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            price.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            price.aliases = server.defineList("aliases", Aliases.price, o -> o instanceof String);
            price.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Rank");
            rank.enable = server.define("enable", true);
            rank.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            rank.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            rank_change_perm = server.define("modify-perm", "serverutils.rank.modify");
            rank.aliases = server.defineList("aliases", Aliases.rank, o -> o instanceof String);
            rank.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Rankup");
            rankup.enable = server.define("enable", true);
            rankup.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            rankup.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            rankup.aliases = server.defineList("aliases", Aliases.rankup, o -> o instanceof String);
            rankup.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Reload");
            reload.enable = server.define("enable", true);
            reload.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            reload.cooldown = server.defineInRange("cooldown", 5, 0, Integer.MAX_VALUE);
            reload.aliases = server.defineList("aliases", Aliases.reload, o -> o instanceof String);
            reload.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Repair");
            repair.enable = server.define("enable", true);
            repair.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            repair.cooldown = server.defineInRange("cooldown", 5, 0, Integer.MAX_VALUE);
            repair_all_perm = server.define("repair all perm", "serverutils.repair.all");
            repair.aliases = server.defineList("aliases", Aliases.repair, o -> o instanceof String);
            repair.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Respond");
            respond.enable = server.define("enable", true);
            respond.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            respond.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            respond.aliases = server.defineList("aliases", Aliases.respond, o -> o instanceof String);
            respond.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Rtp");
            rtp.enable = server.define("enable", true);
            rtp.delay = server.defineInRange("delay", 5, 0, Integer.MAX_VALUE);
            rtp.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            rtp.aliases = server.defineList("aliases", Aliases.rtp, o -> o instanceof String);
            rtp_max = server.defineInRange("max", 5000, 0, Integer.MAX_VALUE);
            rtp_origin_x = server.defineInRange("origin_x", 0, Integer.MIN_VALUE, Integer.MAX_VALUE);
            rtp_origin_z = server.defineInRange("origin_z", 0, Integer.MIN_VALUE, Integer.MAX_VALUE);
            rtp.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Rtpfar");
            rtpfar.enable = server.define("enable", true);
            rtpfar.delay = server.defineInRange("delay", 5, 0, Integer.MAX_VALUE);
            rtpfar.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            rtpfar.aliases = server.defineList("aliases", Aliases.rtpfar, o -> o instanceof String);
            rtpfar_max = server.defineInRange("max", 10000, 0, Integer.MAX_VALUE);
            rtpfar.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Rtpnear");
            rtpnear.enable = server.define("enable", true);
            rtpnear.delay = server.defineInRange("delay", 5, 0, Integer.MAX_VALUE);
            rtpnear.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            rtpnear.aliases = server.defineList("aliases", Aliases.rtpnear, o -> o instanceof String);
            rtpnear_min = server.defineInRange("min", 100, 0, Integer.MAX_VALUE);
            rtpnear_max = server.defineInRange("max", 1000, 0, Integer.MAX_VALUE);
            rtpnear.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Rules");
            rules.enable = server.define("enable", true);
            rules.delay = server.defineInRange("delay", 5, 0, Integer.MAX_VALUE);
            rules.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            rules.aliases = server.defineList("aliases", Aliases.rules, o -> o instanceof String);
            rules.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Sell");
            sell.enable = server.define("enable", true);
            sell.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            sell.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            sell.aliases = server.defineList("aliases", Aliases.sell, o -> o instanceof String);
            sell.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Sethome");
            sethome.enable = server.define("enable", true);
            sethome.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            sethome.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            sethome.aliases = server.defineList("aliases", Aliases.sethome, o -> o instanceof String);
            sethome.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Setspawn");
            setspawn.enable = server.define("enable", true);
            setspawn.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            setspawn.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            setspawn.aliases = server.defineList("aliases", Aliases.setspawn, o -> o instanceof String);
            setspawn.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Setwarp");
            setwarp.enable = server.define("enable", true);
            setwarp.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            setwarp.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            setwarp.aliases = server.defineList("aliases", Aliases.setwarp, o -> o instanceof String);
            setwarp.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Smite");
            smite.enable = server.define("enable", true);
            smite.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            smite.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            smite.aliases = server.defineList("aliases", Aliases.smite, o -> o instanceof String);
            smite.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Spawn");
            spawn.enable = server.define("enable", true);
            spawn.delay = server.defineInRange("delay", 5, 0, Integer.MAX_VALUE);
            spawn.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            spawn.aliases = server.defineList("aliases", Aliases.spawn, o -> o instanceof String);
            spawn.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("StaffChat");
            staffchat.enable = server.define("enable", true);
            staffchat.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            staffchat.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            staffchat.aliases = server.defineList("aliases", Aliases.staffchat, o -> o instanceof String);
            staffchat.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Sudo");
            sudo.enable = server.define("enable", true);
            sudo.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            sudo.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            sudo.aliases = server.defineList("aliases", Aliases.sudo, o -> o instanceof String);
            sudo.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Titles");
            titles.enable = server.define("enable", true);
            titles.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            titles.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            titles.aliases = server.defineList("aliases", Aliases.titles, o -> o instanceof String);
            titles.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
            titles_admin = server.define("admin", "command.title.admin");
        server.pop();
        server.push("Tpa");
            tpa.enable = server.define("enable", true);
            tpa.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            tpa.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            tpa_tp_time = server.defineInRange("tp time", 5, 0, Integer.MAX_VALUE);
            tpa.aliases = server.defineList("aliases", Aliases.tpa, o -> o instanceof String);
            tpa.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("TpaAccept");
            tp_accept.enable = server.define("enable", true);
            tp_accept.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            tp_accept.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            tp_accept.aliases = server.defineList("aliases", Aliases.tpa_accept, o -> o instanceof String);
            tp_accept.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("TpaDeny");
            tp_deny.enable = server.define("enable", true);
            tp_deny.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            tp_deny.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            tp_deny.aliases = server.defineList("aliases", Aliases.tpa_deny, o -> o instanceof String);
            tp_deny.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("TpaHere");
            tp_here.enable = server.define("enable", true);
            tp_here.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            tp_here.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            tp_here.aliases = server.defineList("aliases", Aliases.tpa_here, o -> o instanceof String);
            tp_here.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Trust");
            trust.enable = server.define("enable", true);
            trust.delay = server.defineInRange("delay", 5, 0, Integer.MAX_VALUE);
            trust.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            trust.aliases = server.defineList("aliases", Aliases.trust, o -> o instanceof String);
            trust.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Unclaim");
            unclaim.enable = server.define("enable", true);
            unclaim.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            unclaim.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            unclaim.aliases = server.defineList("aliases", Aliases.unclaim, o -> o instanceof String);
            unclaim.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("UnclaimAll");
            unclaimAll.enable = server.define("enable", true);
            unclaimAll.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            unclaimAll.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            unclaimAll.aliases = server.defineList("aliases", Aliases.unclaimAll, o -> o instanceof String);
            unclaimAll.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Unjail");
            unjail.enable = server.define("enable", true);
            unjail.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            unjail.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            unjail.aliases = server.defineList("aliases", Aliases.unjail, o -> o instanceof String);
            unjail.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Untrust");
            untrust.enable = server.define("enable", true);
            untrust.delay = server.defineInRange("delay", 5, 0, Integer.MAX_VALUE);
            untrust.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            untrust.aliases = server.defineList("aliases", Aliases.untrust, o -> o instanceof String);
            untrust.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Warp");
            warp.enable = server.define("enable", true);
            warp.delay = server.defineInRange("delay", 5, 0, Integer.MAX_VALUE);
            warp.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            warp.aliases = server.defineList("aliases", Aliases.warp, o -> o instanceof String);
            warp.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
        server.push("Warps");
            warps.enable = server.define("enable", true);
            warps.delay = server.defineInRange("delay", 0, 0, Integer.MAX_VALUE);
            warps.cooldown = server.defineInRange("cooldown", 0, 0, Integer.MAX_VALUE);
            warps.aliases = server.defineList("aliases", Aliases.warps, o -> o instanceof String);
            warps.cost = server.defineInRange("cost", 0, 0, Integer.MAX_VALUE);
        server.pop();
    }

    public static class CommandInfo {
        public ForgeConfigSpec.BooleanValue enable;
        public ForgeConfigSpec.IntValue delay;
        public ForgeConfigSpec.IntValue cooldown;
        public ForgeConfigSpec.IntValue cost;
        public ForgeConfigSpec.ConfigValue<List<? extends String>> aliases;
    }
}
