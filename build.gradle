buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

sourceSets {
    api {
        java {
            srcDir 'src/api/java'
        }
        compileClasspath += configurations.getByName("minecraft")
    }
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
            srcDir 'src/main/generated/resources'
        }
        compileClasspath += compileClasspath += sourceSets.api.output
    }
}

version = modMinecraftVersion + "-" + modVersion
group = modGroup
archivesBaseName = modFileName

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.16.5'
    runs {
        client {
            workingDirectory project.file('run')
            
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                serverutilities {
                    source sourceSets.main
                    source sourceSets.api
                }
            }
        }

        server {
            workingDirectory project.file('run')
            
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                serverutilities {
                    source sourceSets.main
                    source sourceSets.api
                }
            }
        }

        data {
            workingDirectory project.file('run')
            
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'serverutilities', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                serverutilities {
                    source sourceSets.main
                    source sourceSets.api
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }


repositories {
    flatDir name: 'libs', dirs: 'libs'
}

dependencies {
    minecraft 'net.minecraftforge:forge:' + modMinecraftVersion + '-' + modForgeVersion
    //runtimeOnly fg.deobf("blank:spark:1.0.0")
}

jar {
    from sourceSets.api.output
    from sourceSets.main.output
    manifest {
        attributes([
                "Specification-Title": "serverutilities",
                "Specification-Vendor": "serverutilities",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"serverutilities",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

task apiJar(type: Jar) {
    from sourceSets.api.output
    classifier 'api'
}

reobf {
    jar {}
    apiJar {}
}

tasks.named("processResources") {
    duplicatesStrategy = 'exclude'
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
